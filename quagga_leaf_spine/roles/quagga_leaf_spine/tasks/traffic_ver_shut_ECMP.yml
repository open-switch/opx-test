---

- name: CPS Get the number of routes on NAS with nexthop as 1 on Leaf1
  command: bash -c "/usr/bin/cps_get_oid.py base-route/obj/entry base-route/obj/entry/af=2 | grep 'nh-count = {{ interfaces[ansible_host]['nhcount_shut'] }}' | wc -l"
  register: cps_get_routes_link_shut
  when: inventory_hostname == 'Leaf1'

- debug:
    msg: "{{ cps_get_routes_link_shut }}"
  when: inventory_hostname == 'Leaf1'

- name: Verify the number of routes in NAS with next-hop of 1 on Leaf1
  assert:
    that: "{{ interfaces[ansible_host]['routecount'] }} <= {{ cps_get_routes_link_shut.stdout }}"
    msg: Routes are not present
  when: inventory_hostname == 'Leaf1'

- name: Clear the statistics on the device before sending the traffic
  shell: "/usr/bin/opx-show-stats clear {{ item }}"
  with_items:
      - "{{ interfaces[ansible_host]['interface1'] }}"
      - "{{ interfaces[ansible_host]['interface2'] }}"
  when: inventory_hostname == 'Leaf2'

- name: Send the data traffic to the 500 routes generated
  shell: "start-stop-daemon --start --quiet --pidfile /var/log/syslog --exec /usr/bin/mgen input /tmp/script.mgen"
  when: inventory_hostname == 'Leaf1'

- pause:
    seconds: 30

- name: Dump the packet counter on the interface on Leaf2
  shell: "/usr/bin/opx-show-stats if_stat {{ interfaces[ansible_host]['interface2'] }} | grep ether-in-pkts-1024-to-1518-octets | awk '{print $3}'"
  register: pkt_counters_shut
  when: inventory_hostname == 'Leaf2'

- debug:
    msg: "{{ pkt_counters_shut.stdout }}"
  when: inventory_hostname == 'Leaf2'

- name: Verify the packets received on the interface on Leaf2
  assert:
    that:
      - "{{ pkt_counters_shut.stdout }} >= {{ interfaces[ansible_host]['pktcount'] }}"
    msg: Packets are not received on the interface
  when: inventory_hostname == 'Leaf2'