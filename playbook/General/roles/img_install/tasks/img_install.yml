---
##### Ansible Playbook for configure fanout interfaces on Dell OPX setup
##### (c) 2018 Dell Technologies
#####
##### EX: Deploying new OPX image with option -e image=<http_url>
#####    $ ansible-playbook opx_install.yaml -e image=http://archive.openswitch.net/installers/2.3.0/Dell-EMC/PKGS_OPX-2.3.0-installer-x86_64.bin
#####
##### EX: Recover/Install OPX image on specific device, which current in ONIE shell (option "-e image=<http_url>" may be used)
#####    $ ansible-playbook opx_install.yaml --skip-tags boot-onie --limit AG1
#####
##### EX: Just configure the OPX with management IP.
#####    $ ansible-playbook opx_install.yaml --skip-tags boot-onie,install


      
- block:  
  - name: Login and get prompt
    include_tasks: console-cmd.yml
    register: output


  - debug:
      msg: "{{ output.stdout }}"


  - fail:
     msg: System Crashed {{inventory_hostname}}
    when: 'output.stdout is search("Emergency Remount R/O")'


  - name: Set GRUB to boot ONIE
    include_tasks: console-cmd.yml 
    vars: 
      cmd: "{{ grub_boot_onie }}" 
      extra_exp: "{{ get_onie_prompt }}"
    when: "'ONIE:/' not in output.stdout"
    tags:
      - boot-onie


  - name: Reboot
    include_tasks: console-cmd.yml 
    vars:
      cmd: "reboot"
      timeout: 300
      extra_exp: "{{ get_onie_prompt}}"
    when: 'output.stdout is not search("ONIE:/ #")'
    tags:
      - boot-onie
          
  
  - name: Get to ONIE Prompt
    include_tasks: console-cmd.yml
    vars:
      exp: "{{ get_onie_prompt }}"
      timeout: 300
    retries: 3
    delay: 3
    until: 'output.stdout is search("ONIE:/ #")'
    tags:
      - install


  - name: configure management port (ONIE)
    include_tasks: console-cmd.yml  
    vars:
      cmd: "{{ set_onie_eth0 }}"
    tags:
      - install
  

  - name: Install OPX image
    include_tasks: console-cmd.yml 
    vars:
      cmd: "{{ nos_install }}"
      extra_exp: "{{ nos_install_exp }}"
      timeout: 500
    register: output
    retries: 3
    delay: 2
    until: 'output.stdout is not search("wget: (bad address|download timed out|server returned error)")'
    tags:
      - install

      
  - fail:
      msg: Failed to fetch OPX image for {{ inventory_hostname }}
    when: 'output.stdout is search("wget: (bad address|download timed out|server returned error)")'
    tags:
      - install

      
  - name: Login to OPX
    include_tasks: console-cmd.yml 
    vars:
      timeout: 800
    tags:
      - install


  - name: Configure management port (OPX)
    include_tasks: console-cmd.yml 
    vars:
      cmd: "{{ set_eth0 }}"
      timeout: 500


  - name: Pause for the management interface to be up
    pause:
      seconds: 30

  - name: Setting hostname
    include_tasks: set-hostname.yml
